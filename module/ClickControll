#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jul 16 16:11:05 2020

@author: Charles Path
"""
from RPi import GPIO
from threading import Thread
import time
import config as cf


class Click:
    def __init__(self):
        self.l_btn    = cf.l_btn
        self.click    = cf.clicks
        self.GPIO_setup()
        
        self.timeout = 0.5 # how long can pass between two clicks to consider them part of the same event
        self.short_click = 0.65 # length of a single click
        self.long_click = 1.0 # length of a long click
        self.very_long_click = 4.0 # length of a veeeery long click
        
    
    def GPIO_setup(self):
        #GPIO SETUP
        GPIO.setmode(GPIO.BCM)
        #left controll
        GPIO.setup(self.l_btn, GPIO.IN, pull_up_down=GPIO.PUD_UP)
    
    def pressed(self):
        start_time = time.time()
        while not GPIO.input(self.l_btn):
            time.sleep(.1)
        pressed_time = time.time() - start_time
        if pressed_time < self.short_click:
            return 'short'
        elif pressed_time > self.very_long_click:
            return 'very long'
        else:
            return 'long'

# returns the kind of click event
def pressing(self):

    tmpclicks = []
    start_time = time.time()
    while time.time() - start_time < self.timeout:
        if not GPIO.input(self.l_btn):
            tmpclicks.append(self.pressed())
            start_time = time.time()
    self.clicks = tmpclicks

def readClick(self):
    while True:
        try:
            t
        except NameError:
            if not GPIO.input(self.l_btn):
                t= Thread(target=pressing)
                t.start()
        else:
            clicks = self.clicks
            if clicks:
                if clicks == ['short']:
                    print ("Single click")
                elif clicks == ['short', 'short']:
                    print ("Double click")
                elif clicks == ['short','short', 'short']:
                    print ("Triple click")
                elif clicks == ['long']:
                    print ("Long click")
                elif clicks == ['long', 'long']:
                    print ("Double long click")
                elif clicks == ['very long']:
                    print ("Very long click")
                self.clicks = []
                del t

if __name__ == "__main__":
    c = Click()
    c.readClick()

    
        
        
